#include "time.h"
#include "BackScleen.h"
#include "Player.h"
#include "Particle.h"
#include "Gravity.h"
#include "Easing.h"

int WINAPI WinMain(_In_ HINSTANCE hInstance, _In_opt_ HINSTANCE hPrevInstance, _In_ LPSTR lpCmdLine,
	_In_ int nCmdShow) {
	// ウィンドウモードに設定
	ChangeWindowMode(TRUE);

	// ウィンドウサイズを手動では変更させず、
	// かつウィンドウサイズに合わせて拡大できないようにする
	SetWindowSizeChangeEnableFlag(FALSE, FALSE);

	// タイトルを変更
	SetMainWindowText(TITLE);

	// 画面サイズの最大サイズ、カラービット数を設定(モニターの解像度に合わせる)
	SetGraphMode(WIN_WIDTH, WIN_HEIGHT, 32);

	// 画面サイズを設定(解像度との比率で設定)
	SetWindowSizeExtendRate(1.0);

	// 画面の背景色を設定する
	SetBackgroundColor(0, 0, 0);

	// DXlibの初期化
	if (DxLib_Init() == -1) { return -1; }

	// (ダブルバッファ)描画先グラフィック領域は裏面を指定
	SetDrawScreen(DX_SCREEN_BACK);

	// 画像などのリソースデータの変数宣言と読み込み


	// ゲームループで使う変数の宣言

	//背景
	BackScleen* backScleen = new BackScleen();

	//プレイヤー
	Player* player = new Player();

	//gravity
	Gravity* gravity = new Gravity();

	//イージング
	Easing* easing = new Easing();

	//パーティクル
	Particle* particle = new Particle;

	//乱数
	srand(time(NULL));

	// 最新のキーボード情報用
	char keys[256] = { 0 };

	// 1ループ(フレーム)前のキーボード情報
	char oldkeys[256] = { 0 };

	// ゲームループ
	while (true) {
		// 最新のキーボード情報だったものは1フレーム前のキーボード情報として保存
		for (int i = 0; i < 256; ++i)
		{
			oldkeys[i] = keys[i];
		}
		//配列なのでoldkey - keys;のようにできない。要素を１つずつコピー

		// 最新のキーボード情報を取得
		GetHitKeyStateAll(keys);

		// 画面クリア
		ClearDrawScreen();
		//---------  ここからプログラムを記述  ----------//

		// 更新処理

		//当たり判定のリセット
		particle->ResetHit();

		//背景
		backScleen->BackColor();

		//重力の方向操作
		gravity->GravityOpe(keys);

		//リセット
		if (keys[KEY_INPUT_R] == 1) {
			
		}

		//イージング
		easing->UpdatePlayer(player->player);

		//プレイヤーの移動
		player->PlayerMove(gravity->gravityArrow,particle->isHit);

		//壁のパーティクル
		particle->HitParticle(player->player);

		//パーティクル
		particle->PlayerParticle(player->player);

		// 描画処理
		backScleen->ShowBackColor();

		//イージング
		easing->DrawEasing(player->player);
		//壁のパーティクル
		particle->DrawHitParticle();

		//パーティクル
		particle->DrawPlayerParticle();
		//プレイヤー
		player->DrawPlayer();

		//外枠
		DrawBox(-50, -50, WIN_WIDTH + 50, 0, GetColor(255, 255, 255), true);
		DrawBox(-50, -50, 0, WIN_HEIGHT + 50, GetColor(255, 255, 255), true);
		DrawBox(-50, WIN_HEIGHT + 50, WIN_WIDTH + 50, WIN_HEIGHT, GetColor(255, 255, 255), true);
		DrawBox(WIN_WIDTH + 50, -50, WIN_WIDTH, WIN_HEIGHT + 50, GetColor(255, 255, 255), true);

		//---------  ここまでにプログラムを記述  ---------//
		// (ダブルバッファ)裏面
		ScreenFlip();

		// 20ミリ秒待機(疑似60FPS)
		WaitTimer(20);

		// Windowsシステムからくる情報を処理する
		if (ProcessMessage() == -1) {
			break;
		}

		// ESCキーが押されたらループから抜ける
		if (CheckHitKey(KEY_INPUT_ESCAPE) == 1) {
			break;
		}
	}
	//デストラクタ
	delete backScleen;
	delete player;
	delete gravity;
	delete particle;
	delete easing;

	// Dxライブラリ終了処理
	DxLib_End();

	// 正常終了
	return 0;
}
